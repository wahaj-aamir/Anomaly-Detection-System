# -*- coding: utf-8 -*-
"""LiveFeed and Video API.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ekzpuJqPGn-l6GxlEze0MJvjzxL-kXZT
"""

from fastapi import FastAPI, File, UploadFile, Form
from ultralytics import YOLO
import cv2
import numpy as np
import tempfile
import os

app = FastAPI()
model = YOLO("best.pt")  # Load YOLOv8 model

@app.post("/detect")
async def detect(file: UploadFile = None, live_url: str = Form(None)):
    try:
        if file:  # If a video file is uploaded
            temp_video_path = f"temp_{file.filename}"
            with open(temp_video_path, "wb") as buffer:
                buffer.write(await file.read())

            cap = cv2.VideoCapture(temp_video_path)
        elif live_url:  # If a live feed URL is given
            cap = cv2.VideoCapture(live_url)
        else:
            return {"error": "No input provided. Upload a video or provide a live feed URL."}

        frame_detections = []
        while cap.isOpened():
            ret, frame = cap.read()
            if not ret:
                break

            # Run YOLO detection
            results = model(frame)
            detections = results[0].boxes.xyxy.cpu().numpy().tolist()
            frame_detections.append(detections)

        cap.release()
        if file: os.remove(temp_video_path)  # Remove temp video file

        return {"frames": frame_detections}
    except Exception as e:
        return {"error": str(e)}